spring.application.name=product-inventory-service
server.port=8080
spring.datasource.url=jdbc:postgresql://localhost:5432/inventorydb
spring.datasource.username=inventory_user
spring.datasource.password=inventorypassword
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.root=INFO
logging.pattern.console=%clr(%d{HH:mm:ss.SSS}){faint} %clr(%-5p) %clr([${spring.application.name} %t]){faint} %clr(%logger{36}){cyan} %m%n
spring.output.ansi.enabled=always
# NEW: Spring Cloud Stream/RabbitMQ Configuration
spring.cloud.stream.bindings.orderCreatedEventConsumer-in-0.destination=order-events-topic
spring.cloud.stream.bindings.orderCreatedEventConsumer-in-0.group=inventory-service-group
spring.cloud.stream.bindings.orderCreatedEventConsumer-in-0.contentType=application/json
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
# Output bindings for Stock events
spring.cloud.stream.bindings.stockReservedEventProducer-out-0.destination=stock-events-topic
spring.cloud.stream.bindings.stockReservedEventProducer-out-0.contentType=application/json
spring.cloud.stream.bindings.stockReservationFailedEventProducer-out-0.destination=stock-events-topic
spring.cloud.stream.bindings.stockReservationFailedEventProducer-out-0.contentType=application/json
